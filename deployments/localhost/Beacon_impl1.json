{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "v",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xba7199a279ba82a928ba3438073360330136af30875d8110cd412654634e76e5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "544591",
    "logsBloom": "0x
    "blockHash": "0xdeb58316b2d4bd9decb00d639f47bf4d9da07c63bd41f7c904b9b6bb426db16a",
    "transactionHash": "0xba7199a279ba82a928ba3438073360330136af30875d8110cd412654634e76e5",
    "logs": [],
    "blockNumber": 80001,
    "cumulativeGasUsed": "544591",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e6fefe60c2822ee4943b682917378f40",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Beacon/b_impl1.sol\":\"Beacon_impl1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"contracts/Beacon/b_impl1.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity 0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\r\\n\\r\\n\\r\\ncontract Beacon_impl1  is Initializable {\\r\\n\\r\\n    string public name;\\r\\n    function initialize(string memory _name) external initializer {\\r\\n       name = _name;\\r\\n    }\\r\\n\\r\\n    function v() external pure returns(uint) {\\r\\n       return 1;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x282618faafaf1f07704afc7d3600108c0a148a5a445cd507b80663e125b84111\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780637c2efcba14610064578063f62d188814610082575b600080fd5b61004e61009e565b60405161005b9190610383565b60405180910390f35b61006c61012c565b60405161007991906103be565b60405180910390f35b61009c60048036038101906100979190610522565b610135565b005b600080546100ab9061059a565b80601f01602080910402602001604051908101604052809291908181526020018280546100d79061059a565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b60006001905090565b600061013f6102cb565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561018d5750825b9050600060018367ffffffffffffffff161480156101c2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101d0575080155b15610207576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102575760018560000160086101000a81548160ff0219169083151502179055505b85600090816102669190610777565b5083156102c35760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102ba9190610898565b60405180910390a15b505050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032d578082015181840152602081019050610312565b60008484015250505050565b6000601f19601f8301169050919050565b6000610355826102f3565b61035f81856102fe565b935061036f81856020860161030f565b61037881610339565b840191505092915050565b6000602082019050818103600083015261039d818461034a565b905092915050565b6000819050919050565b6103b8816103a5565b82525050565b60006020820190506103d360008301846103af565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61042f82610339565b810181811067ffffffffffffffff8211171561044e5761044d6103f7565b5b80604052505050565b60006104616103d9565b905061046d8282610426565b919050565b600067ffffffffffffffff82111561048d5761048c6103f7565b5b61049682610339565b9050602081019050919050565b82818337600083830152505050565b60006104c56104c084610472565b610457565b9050828152602081018484840111156104e1576104e06103f2565b5b6104ec8482856104a3565b509392505050565b600082601f830112610509576105086103ed565b5b81356105198482602086016104b2565b91505092915050565b600060208284031215610538576105376103e3565b5b600082013567ffffffffffffffff811115610556576105556103e8565b5b610562848285016104f4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105b257607f821691505b6020821081036105c5576105c461056b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261062d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105f0565b61063786836105f0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061067461066f61066a846103a5565b61064f565b6103a5565b9050919050565b6000819050919050565b61068e83610659565b6106a261069a8261067b565b8484546105fd565b825550505050565b600090565b6106b76106aa565b6106c2818484610685565b505050565b5b818110156106e6576106db6000826106af565b6001810190506106c8565b5050565b601f82111561072b576106fc816105cb565b610705846105e0565b81016020851015610714578190505b610728610720856105e0565b8301826106c7565b50505b505050565b600082821c905092915050565b600061074e60001984600802610730565b1980831691505092915050565b6000610767838361073d565b9150826002028217905092915050565b610780826102f3565b67ffffffffffffffff811115610799576107986103f7565b5b6107a3825461059a565b6107ae8282856106ea565b600060209050601f8311600181146107e157600084156107cf578287015190505b6107d9858261075b565b865550610841565b601f1984166107ef866105cb565b60005b82811015610817578489015182556001820191506020850194506020810190506107f2565b868310156108345784890151610830601f89168261073d565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061088261087d61087884610849565b61064f565b610853565b9050919050565b61089281610867565b82525050565b60006020820190506108ad6000830184610889565b9291505056fea26469706673582212205c0a0e7c4a7ef8a7955161249b201eaabee22cebbbb836299fe6dbc185d3c49c64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780637c2efcba14610064578063f62d188814610082575b600080fd5b61004e61009e565b60405161005b9190610383565b60405180910390f35b61006c61012c565b60405161007991906103be565b60405180910390f35b61009c60048036038101906100979190610522565b610135565b005b600080546100ab9061059a565b80601f01602080910402602001604051908101604052809291908181526020018280546100d79061059a565b80156101245780601f106100f957610100808354040283529160200191610124565b820191906000526020600020905b81548152906001019060200180831161010757829003601f168201915b505050505081565b60006001905090565b600061013f6102cb565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561018d5750825b9050600060018367ffffffffffffffff161480156101c2575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101d0575080155b15610207576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156102575760018560000160086101000a81548160ff0219169083151502179055505b85600090816102669190610777565b5083156102c35760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102ba9190610898565b60405180910390a15b505050505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032d578082015181840152602081019050610312565b60008484015250505050565b6000601f19601f8301169050919050565b6000610355826102f3565b61035f81856102fe565b935061036f81856020860161030f565b61037881610339565b840191505092915050565b6000602082019050818103600083015261039d818461034a565b905092915050565b6000819050919050565b6103b8816103a5565b82525050565b60006020820190506103d360008301846103af565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61042f82610339565b810181811067ffffffffffffffff8211171561044e5761044d6103f7565b5b80604052505050565b60006104616103d9565b905061046d8282610426565b919050565b600067ffffffffffffffff82111561048d5761048c6103f7565b5b61049682610339565b9050602081019050919050565b82818337600083830152505050565b60006104c56104c084610472565b610457565b9050828152602081018484840111156104e1576104e06103f2565b5b6104ec8482856104a3565b509392505050565b600082601f830112610509576105086103ed565b5b81356105198482602086016104b2565b91505092915050565b600060208284031215610538576105376103e3565b5b600082013567ffffffffffffffff811115610556576105556103e8565b5b610562848285016104f4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105b257607f821691505b6020821081036105c5576105c461056b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261062d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105f0565b61063786836105f0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061067461066f61066a846103a5565b61064f565b6103a5565b9050919050565b6000819050919050565b61068e83610659565b6106a261069a8261067b565b8484546105fd565b825550505050565b600090565b6106b76106aa565b6106c2818484610685565b505050565b5b818110156106e6576106db6000826106af565b6001810190506106c8565b5050565b601f82111561072b576106fc816105cb565b610705846105e0565b81016020851015610714578190505b610728610720856105e0565b8301826106c7565b50505b505050565b600082821c905092915050565b600061074e60001984600802610730565b1980831691505092915050565b6000610767838361073d565b9150826002028217905092915050565b610780826102f3565b67ffffffffffffffff811115610799576107986103f7565b5b6107a3825461059a565b6107ae8282856106ea565b600060209050601f8311600181146107e157600084156107cf578287015190505b6107d9858261075b565b865550610841565b601f1984166107ef866105cb565b60005b82811015610817578489015182556001820191506020850194506020810190506107f2565b868310156108345784890151610830601f89168261073d565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061088261087d61087884610849565b61064f565b610853565b9050919050565b61089281610867565b82525050565b60006020820190506108ad6000830184610889565b9291505056fea26469706673582212205c0a0e7c4a7ef8a7955161249b201eaabee22cebbbb836299fe6dbc185d3c49c64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1313,
        "contract": "contracts/Beacon/b_impl1.sol:Beacon_impl1",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}